--- a/drivers/net/wireless/ath/ath11k/nss.c
+++ b/drivers/net/wireless/ath/ath11k/nss.c
@@ -307,13 +307,14 @@ static void ath11k_nss_peer_mem_free(str
 
 /*-----------------------------Events/Callbacks------------------------------*/
 
-void ath11k_nss_wifili_event_receive(struct ath11k_base *ab, struct nss_wifili_msg *msg)
+void ath11k_nss_wifili_event_receive(void *context, struct nss_wifili_msg *msg)
 {
 	u32 msg_type = msg->cm.type;
 	enum nss_cmn_response response = msg->cm.response;
 	u32 error =  msg->cm.error;
 	u32 peer_id;
 	struct nss_wifili_peer_stats *peer_stats;
+	struct ath11k_base *ab = (struct ath11k_base *)context;
 
 	if (!ab)
 		return;
@@ -505,6 +506,17 @@ ath11k_nss_wifili_ext_callback_fn(struct
 	}
 }
 
+static inline void ath11k_nss_wifili_ext_callback_wrapper(struct net_device *netdev,
+						   struct sk_buff *skb,
+						   struct napi_struct *napi)
+{
+	// Retrieve the ath11k_base from the net_device's private data
+	struct ath11k_base *ab = (struct ath11k_base *)netdev_priv(netdev);
+
+	// Call the original function with the retrieved ath11k_base
+	ath11k_nss_wifili_ext_callback_fn(ab, skb, napi);
+}
+
 void ath11k_nss_vdev_cfg_cb(void *app_data, struct nss_cmn_msg *msg)
 {
 	struct ath11k_vif *arvif = (struct ath11k_vif *)app_data;
@@ -1360,7 +1372,7 @@ int ath11k_nss_mesh_exception_flags(stru
 	nss_tx_status_t status;
 	int ret = 0;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	status = (nss_tx_status_t)nss_wifi_meshmgr_mesh_path_exception(arvif->nss.mesh_handle, nss_msg,
 			msg_cb, arvif->ar->ab);
@@ -1461,7 +1473,7 @@ static int ath11k_nss_mesh_mpath_add(str
 	if (!msg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	ether_addr_copy(msg->dest_mac_addr, path->mesh_da);
 	ether_addr_copy(msg->next_hop_mac_addr, path->next_hop);
@@ -1507,7 +1519,7 @@ static int ath11k_nss_mesh_mpath_update(
 	if (!msg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	ether_addr_copy(msg->dest_mac_addr, path->mesh_da);
 	ether_addr_copy(msg->next_hop_mac_addr, path->next_hop);
@@ -1563,7 +1575,7 @@ static int ath11k_nss_mesh_mpath_del(str
 	if (!msg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	ether_addr_copy(msg->mesh_dest_mac_addr, path->mesh_da);
 	ether_addr_copy(msg->next_hop_mac_addr, path->next_hop);
@@ -1599,7 +1611,7 @@ static int ath11k_nss_mesh_mpp_add_cmd(s
 	if (!msg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	ether_addr_copy(msg->dest_mac_addr, path->da);
 	ether_addr_copy(msg->mesh_dest_mac, path->mesh_da);
@@ -1635,7 +1647,7 @@ static int ath11k_nss_mesh_mpp_update_cm
 	if (!msg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	ether_addr_copy(msg->dest_mac_addr, path->da);
 	ether_addr_copy(msg->mesh_dest_mac, path->mesh_da);
@@ -1673,7 +1685,7 @@ static int ath11k_nss_mesh_mpp_del_cmd(s
 	if (!msg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	ether_addr_copy(msg->dest_mac_addr, path->da);
 	ether_addr_copy(msg->mesh_dest_mac_addr, path->mesh_da);
@@ -1862,7 +1874,7 @@ void ath11k_nss_mpp_timer_cb(struct time
 	LIST_HEAD(local_entry);
 	nss_tx_status_t status;
 
-	msg_cb = (nss_wifi_mesh_msg_callback_t)ath11k_nss_mesh_wifili_event_receive;
+	msg_cb = ath11k_nss_mesh_wifili_event_receive;
 
 	if (!arvif->nss.mpp_dump_req)
 		arvif->nss.mpp_dump_num_entries = 0;
@@ -2996,7 +3008,7 @@ int ath11k_nss_ext_vdev_wds_4addr_allow(
 	cfg_4addr_msg->if_num = arvif->nss.if_num;
 	cfg_4addr_msg->enable = true;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ar->ab->nss.if_num,
 			 NSS_WIFILI_PEER_4ADDR_EVENT_MSG,
@@ -3396,7 +3408,7 @@ int ath11k_nss_set_peer_sec_type(struct
 		memcpy(&sec_msg->mic_key[0], mic_key, NSS_WIFILI_MIC_KEY_LEN);
 	}
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ar->ab->nss.if_num,
 			 NSS_WIFILI_PEER_SECURITY_TYPE_MSG,
@@ -3435,7 +3447,7 @@ int ath11k_nss_set_peer_authorize(struct
 	auth_msg->peer_id = peer_id;
 	auth_msg->auth_flag = 1;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ar->ab->nss.if_num,
 			 NSS_WIFILI_PEER_UPDATE_AUTH_FLAG,
@@ -3667,7 +3679,7 @@ int ath11k_nss_peer_delete(struct ath11k
 	peer_msg->vdev_id = peer->vdev_id;
 	peer_msg->peer_id = peer->peer_id;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_PEER_DELETE_MSG,
@@ -3765,7 +3777,7 @@ int ath11k_nss_peer_create(struct ath11k
 	peer_msg->nss_peer_mem = peer->nss.paddr;
 	peer_msg->psta_vdev_id = peer->vdev_id;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_PEER_CREATE_MSG,
@@ -3833,7 +3845,7 @@ int ath11k_nss_add_wds_peer(struct ath11
 	ether_addr_copy(wds_peer_msg->peer_mac, peer->addr);
 	ether_addr_copy(wds_peer_msg->dest_mac, dest_mac);
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_WDS_PEER_ADD_MSG,
@@ -3879,7 +3891,7 @@ int ath11k_nss_update_wds_peer(struct at
 	ether_addr_copy(wds_peer_msg->peer_mac, peer->addr);
 	ether_addr_copy(wds_peer_msg->dest_mac, dest_mac);
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_WDS_PEER_UPDATE_MSG,
@@ -3930,7 +3942,7 @@ int ath11k_nss_map_wds_peer(struct ath11
 
 	ether_addr_copy(wds_peer_map_msg->dest_mac, dest_mac);
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_WDS_PEER_MAP_MSG,
@@ -3976,7 +3988,7 @@ int ath11k_nss_del_wds_peer(struct ath11
 	ether_addr_copy(wds_peer_msg->peer_mac, peer_addr);
 	ether_addr_copy(wds_peer_msg->dest_mac, dest_mac);
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_WDS_PEER_DEL_MSG,
@@ -4290,7 +4302,7 @@ static int ath11k_nss_mesh_capability(st
 	if (!wlmsg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	reinit_completion(&ab->nss.complete);
 
@@ -4407,7 +4419,7 @@ static int ath11k_nss_init(struct ath11k
 
 	/* register callbacks for events and exceptions with nss */
 	nss_contex = nss_register_wifili_if(ab->nss.if_num, NULL,
-					    (nss_wifili_callback_t)ath11k_nss_wifili_ext_callback_fn,
+					    (nss_wifili_callback_t)ath11k_nss_wifili_ext_callback_wrapper,
 					    (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive,
 					    (struct net_device *)ab, features);
 
@@ -4426,7 +4438,7 @@ static int ath11k_nss_init(struct ath11k
 	 */
 	ab->nss.ctx = nss_contex;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	/* Initialize the common part of the wlmsg */
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
@@ -4497,7 +4509,7 @@ static int ath11k_nss_stats_cfg(struct a
 	stats_cfg = &wlmsg->msg.scm;
 	stats_cfg->cfg = enable;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 nss_msg,
@@ -4606,7 +4618,7 @@ int ath11k_nss_pdev_init(struct ath11k_b
 	refill_ring_id = ar->dp.rx_refill_buf_ring.refill_buf_ring.ring_id;
 	ath11k_nss_fill_srng_info(ab, refill_ring_id, &pdevmsg->rxdma_ring);
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_PDEV_INIT_MSG,
@@ -4680,7 +4692,7 @@ int ath11k_nss_start(struct ath11k_base
 	if (!wlmsg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	/* Empty message for NSS Start message */
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
@@ -4738,7 +4750,7 @@ static void ath11k_nss_reset(struct ath1
 		return;
 	}
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	/* Empty message for NSS Reset message */
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
@@ -4791,7 +4803,7 @@ static int ath11k_nss_stop(struct ath11k
 	if (!wlmsg)
 		return -ENOMEM;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	/* Empty message for Stop command */
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
@@ -4858,7 +4870,7 @@ int ath11k_nss_pdev_deinit(struct ath11k
 	deinit = &wlmsg->msg.pdevdeinit;
 	deinit->ifnum = radio_id;
 
-	msg_cb = (nss_wifili_msg_callback_t)ath11k_nss_wifili_event_receive;
+	msg_cb = ath11k_nss_wifili_event_receive;
 
 	nss_cmn_msg_init(&wlmsg->cm, ab->nss.if_num,
 			 NSS_WIFILI_PDEV_DEINIT_MSG,
